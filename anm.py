# Form implementation generated from reading ui file 'anm.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import base64
import os

from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
from PyQt5.QtGui import QPixmap
from PyQt6 import QtCore, QtGui, QtWidgets

from ANM.Decrypt import decrypt
from ANM.Encrypt import encrypt


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(690, 489)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(190, 59, 61, 81))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.labelVector = QtWidgets.QLabel(parent=self.verticalLayoutWidget)
        self.labelVector.setObjectName("labelVector")
        self.verticalLayout.addWidget(self.labelVector)
        self.labelKey = QtWidgets.QLabel(parent=self.verticalLayoutWidget)
        self.labelKey.setObjectName("labelKey")
        self.verticalLayout.addWidget(self.labelKey)
        self.labelText = QtWidgets.QLabel(parent=self.verticalLayoutWidget)
        self.labelText.setObjectName("labelText")
        self.verticalLayout.addWidget(self.labelText)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(parent=self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(250, 60, 261, 111))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.lineEditVector = QtWidgets.QLineEdit(parent=self.verticalLayoutWidget_2)
        self.lineEditVector.setObjectName("lineEditVector")
        self.verticalLayout_2.addWidget(self.lineEditVector)
        self.lineEditKey = QtWidgets.QLineEdit(parent=self.verticalLayoutWidget_2)
        self.lineEditKey.setObjectName("lineEditKey")
        self.verticalLayout_2.addWidget(self.lineEditKey)
        self.plainTextEditText = QtWidgets.QPlainTextEdit(parent=self.verticalLayoutWidget_2)
        self.plainTextEditText.setObjectName("plainTextEditText")
        self.verticalLayout_2.addWidget(self.plainTextEditText)
        self.horizontalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(190, 230, 321, 89))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.plainTextEditEncrypted = QtWidgets.QPlainTextEdit(parent=self.horizontalLayoutWidget)
        self.plainTextEditEncrypted.setObjectName("plainTextEditEncrypted")
        self.horizontalLayout.addWidget(self.plainTextEditEncrypted)
        self.plainTextEditplainDecrypted = QtWidgets.QPlainTextEdit(parent=self.horizontalLayoutWidget)
        self.plainTextEditplainDecrypted.setObjectName("plainTextEditplainDecrypted")
        self.horizontalLayout.addWidget(self.plainTextEditplainDecrypted)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(parent=self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(270, 320, 161, 41))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pushButtonClear = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_2)
        self.pushButtonClear.setObjectName("pushButtonClear")
        self.horizontalLayout_2.addWidget(self.pushButtonClear)
        self.pushButtonSend = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_2)
        self.pushButtonSend.setObjectName("pushButtonSend")
        self.horizontalLayout_2.addWidget(self.pushButtonSend)
        self.pushButtonUpLoad = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButtonUpLoad.setGeometry(QtCore.QRect(190, 190, 51, 28))
        self.pushButtonUpLoad.setObjectName("pushButtonUpLoad")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 690, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.key = get_random_bytes(AES.block_size)
        self.pushButtonClear.clicked.connect(self.clear_clicked)
        self.pushButtonSend.clicked.connect(self.send_clicked)
        self.pushButtonUpLoad.clicked.connect(self.upload_clicked)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.labelVector.setText(_translate("MainWindow", "Vector"))
        self.labelKey.setText(_translate("MainWindow", "Key"))
        self.labelText.setText(_translate("MainWindow", "Text"))
        self.pushButtonClear.setText(_translate("MainWindow", "Clear"))
        self.pushButtonSend.setText(_translate("MainWindow", "Send"))
        self.pushButtonUpLoad.setText(_translate("MainWindow", "Up load"))

    def clear_clicked(self):
        # Implement the logic to clear the input fields or perform any other actions
        self.lineEditVector.clear()
        self.lineEditKey.clear()
        self.plainTextEditText.clear()
        self.labelImage.clear()
        self.plainTextEditEncrypted.clear()
        self.plainTextEditplainDecrypted.clear()

    def send_clicked(self):
        # Encrypt the text
        new_text = self.plainTextEditEncrypted.toPlainText()
        if not new_text:
            # Handle the case where there is no text to process
            print("Error: No text to process.")
            return

        encrypted_text, iv = encrypt(new_text, self.key)
        decrypted_text = decrypt(encrypted_text, self.key,iv)

        # Update the UI elements with the encrypted information
        self.lineEditVector.setText(iv)
        self.lineEditKey.setText(self.key.hex())
        self.plainTextEditText.setPlainText(encrypted_text)
        self.plainTextEditplainDecrypted.setPlainText(decrypted_text)

        self.lineEditVector.setVisible(True)
        self.lineEditKey.setVisible(True)
        self.plainTextEditEncrypted.setVisible(True)
        self.plainTextEditplainDecrypted.setVisible(True)
        pass  # Replace this with your actual implementation

    def upload_clicked(self):
        # Triển khai logic cho sự kiện nhấp chuột nút "Tải lên"
        file_dialog = QtWidgets.QFileDialog()
        file_path, _ = file_dialog.getOpenFileName()
        if file_path:
            with open(file_path, 'rb') as file:
                file_content = file.read()

            # Set the file name in plainTextEditEncrypted
            file_name = os.path.basename(file_path)
            self.plainTextEditEncrypted.setPlainText(file_name)

            # Store the file content for later use
            self.file_content = file_content

            # Update the label with the file name
            self.plainTextEditEncrypted.setPlainText(file_name)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
